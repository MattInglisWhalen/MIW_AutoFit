C:\Users\Matt\Documents\GitHub\MIW_AutoFit\autofit
 GUI Width >1440<
 GUI Height >810<
 GUI X >0<
 GUI Y >0<
 Fit-type >Procedural<
 Procedural depth >4<
 Excel X-Range >A3:A18<
 Excel Y-Range >B3:B18<
 Excel SigmaX-Range ><
 Excel SigmaY-Range ><
 Data location >C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data<
 Background Colour >Default<
 Data and Axis Colour >Default<
 Fit Line Colour >Default<
 Console Colour >Default<
 Printout Colour >Default<
 Procedural cos(x) >0<
 Procedural sin(x) >1<
 Procedural exp(x) >1<
 Procedural log(x) >0<
 Procedural 1/x >0<
 Procedural custom >0<
 Custom function names ><
 Custom function forms ><
 Manual function name >ManualEntryFunc<
 Manual function form >sin(pow1)<
 OS Scaling >1.00<
 Image R >1.000<
 Refit on Click: >1<
 Criterion: >rchisqr<
 Fine width 1440 2240.0
 Fine height 810 1260.0
 Created frame .!frame2.!frame.!label
 Package directory is C:\Users\Matt\Documents\GitHub\MIW_AutoFit\autofit with MEIPASS=False
 Data directory is C:\Users\Matt\Documents\GitHub\MIW_AutoFit\autofit/data
 self._excel_x_range='A3:A18' self._excel_y_range='B3:B18'
 In this file the sheets names are ['Sheet1']
 In create custom remove menu
 Please first provide start- and end-points for data ranges
 Thank you for providing data ranges
 Thank you for providing data ranges A3:A18 B3:B18  
 Excel scatter plot chosen
 Done x collection
 Done y collection
 Loaded 1 files.
 If refit on button, this should make refit_button appear
 ['C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/file_example_XLS_10.xls']
 New optimizer created
 File is 4x51
 File is 3x6
 Loaded 2 files.
 If refit on button, this should make refit_button appear
 If refit on button, this should make refit_button appear
 ['C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/file_example_XLS_10.xls', 'C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/linear_data_xerrors_yerrors.csv', 'C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/linear_data_yerrors.csv']
 Please first provide start- and end-points for data ranges
 Thank you for providing data ranges
 Thank you for providing data ranges A3:A18 B3:B18  
 Excel scatter plot chosen
 Done x collection
 Done y collection
 Loaded 1 files.
 If refit on button, this should make refit_button appear
 If refit on button, this should make refit_button appear
 ['C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/file_example_XLS_10.xls', 'C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/linear_data_xerrors_yerrors.csv', 'C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/linear_data_yerrors.csv', 'C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/DampedOscillations.xlsx']
 True, so regenerating composite list with 4 and ['pow0', 'pow1', 'my_sin', 'my_exp']
 0 build_comp_list new_len= 48
 1 build_comp_list new_len= 846
 2 build_comp_list new_len= 19624
 0/20526
 500/20526
 1000/20526
 1500/20526
 2000/20526
 2500/20526
 3000/20526
 3500/20526
 4000/20526
 4500/20526
 5000/20526
 5500/20526
 6000/20526
 6500/20526
 7000/20526
 7500/20526
 8000/20526
 8500/20526
 9000/20526
 9500/20526
 10000/20526
 10500/20526
 11000/20526
 11500/20526
 12000/20526
 12500/20526
 13000/20526
 13500/20526
 14000/20526
 14500/20526
 15000/20526
 15500/20526
 16000/20526
 16500/20526
 17000/20526
 17500/20526
 18000/20526
 18500/20526
 19000/20526
 19500/20526
 20000/20526
 20500/20526
 After trimming list: (len=75)
 pow0 w/ 1 dof 
 pow1 w/ 1 dof 
 pow1+pow0 w/ 2 dof 
 pow1·pow1 w/ 1 dof 
 my_sin(pow1) w/ 2 dof 
 my_exp(pow1) w/ 2 dof 
 pow0+my_sin(pow1) w/ 3 dof 
 pow0+my_exp(pow1) w/ 3 dof 
 sum_(pow1+pow0)·pow1 w/ 2 dof 
 pow1·pow1+pow0 w/ 2 dof 
 pow1+my_sin(pow1) w/ 3 dof 
 pow1+my_exp(pow1) w/ 3 dof 
 pow1·pow1·pow1 w/ 1 dof 
 pow1·my_sin(pow1) w/ 2 dof 
 pow1·my_exp(pow1) w/ 2 dof 
 my_sin(pow1+pow0) w/ 3 dof 
 my_sin(pow1·pow1) w/ 2 dof 
 my_sin(my_exp(pow1)) w/ 3 dof 
 my_exp(pow1·pow1) w/ 2 dof 
 my_exp(my_sin(pow1)) w/ 3 dof 
 sum_(pow0+my_sin(pow1))·pow1 w/ 3 dof 
 sum_(pow0+my_exp(pow1))·pow1 w/ 3 dof 
 pow0+my_sin(pow1+pow0) w/ 4 dof 
 pow0+my_sin(pow1·pow1) w/ 3 dof 
 pow0+my_sin(my_exp(pow1)) w/ 4 dof 
 pow0+my_exp(pow1·pow1) w/ 3 dof 
 pow0+my_exp(my_sin(pow1)) w/ 4 dof 
 sum_(pow1+pow0)·pow1·pow1 w/ 2 dof 
 sum_(pow1·pow1+pow0)·pow1 w/ 2 dof 
 pow1+pow0+my_sin(pow1) w/ 4 dof 
 sum_(pow1+pow0)·my_sin(pow1) w/ 3 dof 
 pow1+pow0+my_exp(pow1) w/ 4 dof 
 sum_(pow1+pow0)·my_exp(pow1) w/ 3 dof 
 pow1·pow1·pow1+pow0 w/ 2 dof 
 pow1·my_sin(pow1)+pow0 w/ 3 dof 
 pow1·my_exp(pow1)+pow0 w/ 3 dof 
 pow1·my_sin(pow1)+pow1 w/ 3 dof 
 pow1·my_exp(pow1)+pow1 w/ 3 dof 
 sum_(pow1+my_sin(pow1))·pow1 w/ 3 dof 
 sum_(pow1+my_exp(pow1))·pow1 w/ 3 dof 
 pow1·pow1+my_sin(pow1) w/ 3 dof 
 pow1+my_sin(pow1+pow0) w/ 4 dof 
 pow1+my_sin(pow1·pow1) w/ 3 dof 
 pow1+my_sin(my_exp(pow1)) w/ 4 dof 
 pow1·pow1+my_exp(pow1) w/ 3 dof 
 pow1+my_exp(pow1·pow1) w/ 3 dof 
 pow1+my_exp(my_sin(pow1)) w/ 4 dof 
 pow1(pow1+pow0)·pow1 w/ 2 dof 
 pow1·pow1·pow1·pow1 w/ 1 dof 
 pow1·my_sin(pow1)·pow1 w/ 2 dof 
 pow1·my_exp(pow1)·pow1 w/ 2 dof 
 pow1·my_sin(pow1+pow0) w/ 3 dof 
 pow1·my_sin(pow1·pow1) w/ 2 dof 
 pow1·my_sin(my_exp(pow1)) w/ 3 dof 
 pow1·my_exp(pow1·pow1) w/ 2 dof 
 pow1·my_exp(my_sin(pow1)) w/ 3 dof 
 my_sin(pow1)+my_sin(pow1) w/ 4 dof 
 my_sin(pow1)+my_exp(pow1) w/ 4 dof 
 my_sin(pow0+my_exp(pow1)) w/ 4 dof 
 my_sin(pow1·pow1+pow0) w/ 3 dof 
 my_sin(pow1)·my_sin(pow1) w/ 3 dof 
 my_sin(pow1+my_exp(pow1)) w/ 4 dof 
 my_sin(pow1)·my_exp(pow1) w/ 3 dof 
 my_sin(pow1·pow1·pow1) w/ 2 dof 
 my_sin(pow1·my_exp(pow1)) w/ 3 dof 
 my_sin(my_exp(pow1·pow1)) w/ 3 dof 
 my_exp(pow1)+my_exp(pow1) w/ 4 dof 
 my_exp(pow1+my_sin(pow1)) w/ 4 dof 
 my_exp(pow1·pow1·pow1) w/ 2 dof 
 my_exp(pow1·my_sin(pow1)) w/ 3 dof 
 my_exp(my_sin(pow1+pow0)) w/ 4 dof 
 my_exp(my_sin(pow1·pow1)) w/ 3 dof 
 my_exp(dim0_pow2(pow1_shift)) w/ 3 dof 
 n_exp_dim2(pow1_shift) w/ 2 dof 
 pow_neg1(pow0+exp_dim1(pow1_shift))+pow0 w/ 4 dof 
 |----------------

 
Fitting model=pow0 w/ 1 dof 
 +0/+0sum_       ~ +0/+0pow0      

 pow0 w/ 1 dof  None None
 pow0 w/ 1 dof  None None
 1/75 Scaling guess: [0.10906698285500001]
 1/75 Better guess: [0.14261345] +- [0.01732217]
 1/75 Final guess: [0.14261345] +- [0.01732217]
 Querying 10.09 for pow0
 New top 0 with red_chisqr=10.09: model=pow0 w/ 1 dof  with pars=[0.143] ± [0.017]
 pow0:
 +1.00E+00sum_       ~ +1.43E-01pow0      

 
Fitting model=pow1 w/ 1 dof 
 +0/+0sum_       ~ -1/+1pow1      

 pow1 w/ 1 dof  None None
 pow1 w/ 1 dof  None None
 2/75 Scaling guess: [1.4542264380666667]
 2/75 Better guess: [1.49240829] +- [0.00560798]
 2/75 Final guess: [1.49240829] +- [0.00560798]
 Querying 0.01 for pow1
 New top 0 with red_chisqr=0.01: model=pow1 w/ 1 dof  with pars=[1.492] ± [0.006]
 pow1:
 +1.00E+00sum_       ~ +1.49E+00pow1      

 
Fitting model=pow1+pow0 w/ 2 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0pow0      

 pow1+pow0 w/ 2 dof  None None
 pow0 w/ 1 dof  None None
 pow1 w/ 1 dof  None None
 3/75 Scaling guess: [1.054107661483652, 0.01613524006039609]
 3/75 Better guess: [1.45509398 0.00437952] +- [0.00734388 0.00077547]
 3/75 Final guess: [1.45509398 0.00437952] +- [0.00734388 0.00077547]
 Querying 0.00 for Linear
 New top 0 with red_chisqr=0.00: model=pow1+pow0 w/ 2 dof  with pars=[1.455, 0.004] ± [0.007, 0.001]
 Linear:
 +1.00E+00sum_       ~ +1.46E+00pow1      
                    ~ +4.38E-03pow0      

 
Fitting model=pow1·pow1 w/ 1 dof 
 +0/+0sum_       ~ -2/+1pow1                      x +0/+1pow1      

 pow1·pow1 w/ 1 dof  None None
 pow1·pow1 w/ 1 dof  None None
 4/75 Scaling guess: [16.072753801265268]
 4/75 Better guess: [10.63142052] +- [0.74721333]
 4/75 Final guess: [10.63142052] +- [0.74721333]
 Querying 3.84 for pow1·pow1
 New top 2 with red_chisqr=3.84: model=pow1·pow1 w/ 1 dof  with pars=[10.631] ± [0.747]
 pow1·pow1:
 +1.00E+00sum_       ~ +1.06E+01pow1                          x +1.00E+00pow1      

 
Fitting model=my_sin(pow1) w/ 2 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      

 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 5/75 Scaling guess: [0.10906698285500001, 195.47687622336488]
 5/75 Better guess: [1.75880280e-02 1.97439936e+02] +- [ 0.05981514 32.06707635]
 5/75 Final guess: [1.75880280e-02 1.97439936e+02] +- [ 0.05981514 32.06707628]
 Querying 59.29 for my_sin(pow1)
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 59.29340059370834 -> 26298671312.153614
 
Fitting model=my_exp(pow1) w/ 2 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ -1/+1pow1      

 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 6/75 Scaling guess: [0.10906698285500001, -13.333333333333332]
 6/75 Better guess: [0.05206891 9.66845093] +- [0.00467487 0.66044076]
 6/75 Final guess: [0.05206886 9.66845828] +- [0.0046749  0.66043888]
 Querying 0.50 for my_exp(pow1)
 New top 2 with red_chisqr=0.50: model=my_exp(pow1) w/ 2 dof  with pars=[0.052, 9.668] ± [0.005, 0.660]
 my_exp(pow1):
 +1.00E+00sum_       ~ +5.21E-02my_exp     ~ +9.67E+00pow1      

 
Fitting model=pow0+my_sin(pow1) w/ 3 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_sin     ~ -1/+1pow1      

 pow0+my_sin(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 7/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 195.47687622336488]
 7/75 Better guess: [1.42603065e-01 1.74216962e-02 1.97515875e+02] +- [ 0.01829462  0.02606999 14.0877725 ]
 7/75 Final guess: [1.42603062e-01 1.74215685e-02 1.97514544e+02] +- [ 0.01829462  0.02607056 14.08655658]
 Querying 11.25 for pow0+my_sin(pow1)
 
Fitting model=pow0+my_exp(pow1) w/ 3 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_exp     ~ -1/+1pow1      

 pow0+my_exp(pow1) w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 8/75 Scaling guess: [0.10906698285500001, -0.10906698285500001, -13.333333333333332]
 8/75 Better guess: [ 1.72427011 -1.72461351 -0.92031481] +- [0.0178165  0.01776329 0.01036883]
 8/75 Final guess: [ 1.72427011 -1.72461351 -0.92031481] +- [0.01781649 0.01776328 0.01036882]
 Querying 0.00 for pow0+my_exp(pow1)
 New top 0 with red_chisqr=0.00: model=pow0+my_exp(pow1) w/ 3 dof  with pars=[1.724, -1.725, -0.920] ± [0.018, 0.018, 0.010]
 pow0+my_exp(pow1):
 +1.00E+00sum_       ~ +1.72E+00pow0      
                    ~ -1.72E+00my_exp     ~ -9.20E-01pow1      

 
Fitting model=sum_(pow1+pow0)·pow1 w/ 2 dof 
    -1/+0sum_       ~ -1/+1pow1      
 |                 ~ +0/+0pow0      
 x +0/+1pow1      

 sum_(pow1+pow0)·pow1 w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 9/75 Scaling guess: [1.4542264380666667, 0.10906698285500001]
 9/75 Better guess: [-0.64471405  1.57700171] +- [0.00504351 0.00068321]
 9/75 Final guess: [-0.64471405  1.57700171] +- [0.00504351 0.00068321]
 Querying 0.00 for sum_(pow1+pow0)·pow1
 Booting out contender sum_(pow1+pow0)·pow1 with depth 3 in favour of pow0+my_exp(pow1) with depth 2
 
Fitting model=pow1·pow1+pow0 w/ 2 dof 
 +0/+0sum_       ~ -2/+1pow1                      x +0/+1pow1      
                ~ +0/+0pow0      

 pow1·pow1+pow0 w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 10/75 Scaling guess: [15.149239258389203, -0.04849296150412363]
 10/75 Better guess: [7.2880369  0.06135184] +- [0.45882954 0.00656311]
 10/75 Final guess: [7.2880369  0.06135184] +- [0.45882954 0.00656311]
 Querying 0.57 for pow1·pow1+pow0
 New top 4 with red_chisqr=0.57: model=pow1·pow1+pow0 w/ 2 dof  with pars=[7.288, 0.061] ± [0.459, 0.007]
 pow1·pow1+pow0:
 +1.00E+00sum_       ~ +7.29E+00pow1                          x +1.00E+00pow1      
                    ~ +6.14E-02pow0      

 
Fitting model=pow1+my_sin(pow1) w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_sin     ~ -1/+1pow1      

 pow1+my_sin(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 11/75 Scaling guess: [1.4542264380666667, -0.10906698285500001, 195.47687622336488]
 11/75 Better guess: [ 1.49266085e+00 -4.71327903e-04  1.96990834e+02] +- [5.98051993e-03 8.97263708e-04 1.80684082e+01]
 11/75 Final guess: [ 1.49266085e+00 -4.71327903e-04  1.96990834e+02] +- [5.98051993e-03 8.97263724e-04 1.80684082e+01]
 Querying 0.01 for pow1+my_sin(pow1)
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 0.013321784086548633 -> 5881821.981839411
 
Fitting model=pow1+my_exp(pow1) w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_exp     ~ -1/+1pow1      

 pow1+my_exp(pow1) w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 12/75 Scaling guess: [1.353724109808517, 0.019491242940705537, -12.732813991501951]
 12/75 Better guess: [1.45508202 0.00437944 0.00291606] +- [8.20861082e+00 8.04743987e-04 1.87411412e+03]
 12/75 Final guess: [1.45508202 0.00437944 0.00291606] +- [8.21217219e+00 8.04754756e-04 1.87492411e+03]
 Querying 0.00 for pow1+my_exp(pow1)
 Adjustment: 0.0041501926131315625 -> 1481431.5147076836
 
Fitting model=pow1·pow1·pow1 w/ 1 dof 
 +0/+0sum_       ~ -3/+1pow1                      x +0/+1pow1                      x +0/+1pow1      

 pow1·pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 13/75 Scaling guess: [125.54505555919026]
 13/75 Better guess: [68.0004423] +- [7.92626166]
 13/75 Final guess: [68.0004423] +- [7.92626167]
 Querying 9.43 for pow1·pow1·pow1
 
Fitting model=pow1·my_sin(pow1) w/ 2 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_sin     ~ -1/+1pow1      

 pow1·my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 14/75 Scaling guess: [1.4542264380666667, 1.0]
 14/75 Better guess: [ 1.62664904 12.77971289] +- [0.05903475 0.60081138]
 14/75 Final guess: [ 1.62664867 12.77970524] +- [0.05903307 0.6008395 ]
 Querying 0.82 for pow1·my_sin(pow1)
 
Fitting model=pow1·my_exp(pow1) w/ 2 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_exp     ~ -1/+1pow1      

 pow1·my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 15/75 Scaling guess: [1.4410735926578748, 0.16658674553907118]
 15/75 Better guess: [ 1.57867069 -0.4290561 ] +- [0.00091092 0.00428647]
 15/75 Final guess: [ 1.57867069 -0.4290561 ] +- [0.00091092 0.00428647]
 Querying 0.00 for pow1·my_exp(pow1)
 New top 1 with red_chisqr=0.00: model=pow1·my_exp(pow1) w/ 2 dof  with pars=[1.579, -0.429] ± [0.001, 0.004]
 pow1·my_exp(pow1):
 +1.00E+00sum_       ~ +1.58E+00pow1                          x +1.00E+00my_exp     ~ -4.29E-01pow1      

 
Fitting model=my_sin(pow1+pow0) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      
                                  ~ +0/+0pow0      

 my_sin(pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 xmul=1.0 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.0
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 16/75 Scaling guess: [0.10906698285500001, 195.47687622336488, 1.0]
 16/75 Better guess: [2.28951322e-02 1.78423033e+02 3.32058870e+00] +- [ 0.06233034 57.33336242  5.98790655]
 16/75 Final guess: [2.28940740e-02 1.78411502e+02 3.32135548e+00] +- [ 0.0623316  57.33001538  5.98807984]
 Querying 63.58 for my_sin(pow1+pow0)
 
Fitting model=my_sin(pow1·pow1) w/ 2 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -2/+1pow1                                        x +0/+1pow1      

 my_sin(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=6515895.874112162 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.00018849555921538762
 17/75 Scaling guess: [0.10906698285500001, 6515895.874112162]
 17/75 Better guess: [1.33355592e-01 6.51591275e+06] +- [ 0.05442457 23.63445099]
 17/75 Final guess: [1.33355592e-01 6.51591275e+06] +- [ 0.05442457 23.634451  ]
 Querying 41.15 for my_sin(pow1·pow1)
 
Fitting model=my_sin(my_exp(pow1)) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ +0/+0my_exp     ~ -1/+1pow1      

 my_sin(my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=14.657833845957331 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 83.792560994185
 18/75 Scaling guess: [0.10906698285500001, 14.657833845957331, -13.333333333333332]
 18/75 Better guess: [  0.1391891   19.2540356  -22.56143037] +- [0.05006416 2.26275391 3.1380255 ]
 18/75 Final guess: [  0.13919041  19.25416865 -22.56187873] +- [0.05006496 2.26280218 3.13811743]
 Querying 39.83 for my_sin(my_exp(pow1))
 
Fitting model=my_exp(pow1·pow1) w/ 2 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ -2/+1pow1                                        x +0/+1pow1      

 my_exp(pow1·pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1·pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 19/75 Scaling guess: [0.10906698285500001, -177.77777777777771]
 19/75 Better guess: [ 0.08382607 41.89050904] +- [0.00825882 4.81346301]
 19/75 Final guess: [ 0.0838258  41.89068337] +- [0.00825891 4.81343146]
 Querying 1.53 for my_exp(pow1·pow1)
 
Fitting model=my_exp(my_sin(pow1)) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ +0/+0my_sin     ~ -1/+1pow1      

 my_exp(my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 20/75 Scaling guess: [0.10906698285500001, 1.0, 195.47687622336488]
 20/75 Better guess: [1.41833020e-01 1.28488203e-01 1.61429382e+02] +- [ 0.01845364  0.18708803 13.19007665]
 20/75 Final guess: [1.41833057e-01 1.28484090e-01 1.61427146e+02] +- [ 0.01845365  0.18709383 13.18810605]
 Querying 11.24 for my_exp(my_sin(pow1))
 
Fitting model=sum_(pow0+my_sin(pow1))·pow1 w/ 3 dof 
    -1/+0sum_       ~ +0/+0pow0      
 |                 ~ +0/+0my_sin     ~ -1/+1pow1      
 x +0/+1pow1      

 sum_(pow0+my_sin(pow1))·pow1 w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 21/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 195.47687622336488]
 21/75 Better guess: [ 1.49303285e+00 -6.11149949e-03  1.97228379e+02] +- [5.96753415e-03 8.45993025e-03 1.02658942e+01]
 21/75 Final guess: [ 1.49303287e+00 -6.11173722e-03  1.97230902e+02] +- [5.96753816e-03 8.45938070e-03 1.02676749e+01]
 Querying 0.01 for sum_(pow0+my_sin(pow1))·pow1
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 0.013072700781724662 -> 5785923.533286981
 
Fitting model=sum_(pow0+my_exp(pow1))·pow1 w/ 3 dof 
    -1/+0sum_       ~ +0/+0pow0      
 |                 ~ +0/+0my_exp     ~ -1/+1pow1      
 x +0/+1pow1      

 sum_(pow0+my_exp(pow1))·pow1 w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 22/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 13.333333333333332]
 22/75 Better guess: [ 1.92382526 -0.35257125  1.52821104] +- [0.004518   0.00445825 0.01635226]
 22/75 Final guess: [ 1.92382526 -0.35257125  1.52821104] +- [0.004518   0.00445825 0.01635226]
 Querying 0.00 for sum_(pow0+my_exp(pow1))·pow1
 Booting out contender sum_(pow0+my_exp(pow1))·pow1 with width 3 in favour of pow0+my_exp(pow1) with width 2
 
Fitting model=pow0+my_sin(pow1+pow0) w/ 4 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_sin     ~ -1/+1pow1      
                                  ~ +0/+0pow0      

 pow0+my_sin(pow1+pow0) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 xmul=1.0 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.0
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 23/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 195.47687622336488, 1.0]
 23/75 Better guess: [1.42613392e-01 1.74692447e-02 1.96145582e+02 2.18422863e-01] +- [1.90349549e-02 2.70794337e-02 3.39529530e+01 3.57640068e+00]
 23/75 Final guess: [1.42613392e-01 1.74692447e-02 1.96145582e+02 2.18422863e-01] +- [1.90349552e-02 2.70790758e-02 3.39547094e+01 3.57649798e+00]
 Querying 12.18 for pow0+my_sin(pow1+pow0)
 
Fitting model=pow0+my_sin(pow1·pow1) w/ 3 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_sin     ~ -2/+1pow1                                        x +0/+1pow1      

 pow0+my_sin(pow1·pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=6515895.874112162 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.00018849555921538762
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 24/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 6515895.874112162]
 24/75 Better guess: [1.33224175e-01 2.69589972e-02 6.51590523e+06] +- [2.13616515e-02 3.26409441e-02 6.53640169e+01]
 24/75 Final guess: [1.33224175e-01 2.69589972e-02 6.51590523e+06] +- [2.13616515e-02 3.26409442e-02 6.53640169e+01]
 Querying 11.01 for pow0+my_sin(pow1·pow1)
 
Fitting model=pow0+my_sin(my_exp(pow1)) w/ 4 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_sin     ~ +0/+0my_exp     ~ -1/+1pow1      

 pow0+my_sin(my_exp(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=14.657833845957331 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 83.792560994185
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 25/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 14.657833845957331, -13.333333333333332]
 25/75 Better guess: [  0.12688531   0.05923391  16.54758584 -17.73103718] +- [0.0165543  0.02156468 2.36482768 2.92422338]
 25/75 Final guess: [  0.12688454   0.05923492  16.54807102 -17.73160568] +- [0.01655409 0.02156402 2.36512338 2.92446087]
 Querying 7.59 for pow0+my_sin(my_exp(pow1))
 
Fitting model=pow0+my_exp(pow1·pow1) w/ 3 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_exp     ~ -2/+1pow1                                        x +0/+1pow1      

 pow0+my_exp(pow1·pow1) w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1·pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 26/75 Scaling guess: [0.10906698285500001, -0.10906698285500001, -177.77777777777771]
 26/75 Better guess: [  0.28119389  -0.24576199 -64.55483019] +- [0.01036028 0.00911539 5.73610615]
 26/75 Final guess: [  0.28119395  -0.24576203 -64.55479687] +- [0.01036038 0.00911549 5.7360985 ]
 Querying 0.05 for pow0+my_exp(pow1·pow1)
 New top 4 with red_chisqr=0.05: model=pow0+my_exp(pow1·pow1) w/ 3 dof  with pars=[0.281, -0.246, -64.555] ± [0.010, 0.009, 5.736]
 pow0+my_exp(pow1·pow1):
 +1.00E+00sum_       ~ +2.81E-01pow0      
                    ~ -2.46E-01my_exp     ~ -6.46E+01pow1                                                x +1.00E+00pow1      

 
Fitting model=pow0+my_exp(my_sin(pow1)) w/ 4 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_exp     ~ +0/+0my_sin     ~ -1/+1pow1      

 pow0+my_exp(my_sin(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 27/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 1.0, 195.47687622336488]
 27/75 Better guess: [2.16050440e-02 1.20374814e-01 1.44488463e-01 1.97092703e+02] +- [ 5.16398089  5.19080036  6.25519433 14.19568171]
 27/75 Final guess: [2.12596106e-02 1.20721980e-01 1.44081360e-01 1.97094342e+02] +- [ 5.2161697   5.24299059  6.25448837 14.19506145]
 Querying 12.19 for pow0+my_exp(my_sin(pow1))
 
Fitting model=sum_(pow1+pow0)·pow1·pow1 w/ 2 dof 
    -2/+0sum_       ~ -1/+1pow1      
 |                 ~ +0/+0pow0      
 x +0/+1pow1       x +0/+1pow1      

 sum_(pow1+pow0)·pow1·pow1 w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 28/75 Scaling guess: [1.4542264380666667, 0.10906698285500001]
 28/75 Better guess: [-108.74509034   26.46853874] +- [12.34307245  1.82283469]
 28/75 Final guess: [-108.74509056   26.46853877] +- [12.34307203  1.82283465]
 Querying 0.63 for sum_(pow1+pow0)·pow1·pow1
 
Fitting model=sum_(pow1·pow1+pow0)·pow1 w/ 2 dof 
    -1/+0sum_       ~ -2/+1pow1       |                 x +0/+1pow1      
 |                 ~ +0/+0pow0      
 x +0/+1pow1      

 sum_(pow1·pow1+pow0)·pow1 w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 29/75 Scaling guess: [19.389685840888884, 0.10906698285500001]
 29/75 Better guess: [-2.70126974  1.5419772 ] +- [0.09798259 0.00196017]
 29/75 Final guess: [-2.70126969  1.5419772 ] +- [0.09798259 0.00196017]
 Querying 0.00 for sum_(pow1·pow1+pow0)·pow1
 New top 2 with red_chisqr=0.00: model=sum_(pow1·pow1+pow0)·pow1 w/ 2 dof  with pars=[-2.701, 1.542] ± [0.098, 0.002]
 sum_(pow1·pow1+pow0)·pow1:
    +1.00E+00sum_       ~ -2.70E+00pow1       |                     x +1.00E+00pow1      
 |                     ~ +1.54E+00pow0      
 x +1.00E+00pow1      

 
Fitting model=pow1+pow0+my_sin(pow1) w/ 4 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0pow0      
                ~ +0/+0my_sin     ~ -1/+1pow1      

 pow1+pow0+my_sin(pow1) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 30/75 Scaling guess: [1.4542264380666667, 0.10906698285500001, 0.10906698285500001, 195.47687622336488]
 30/75 Better guess: [ 1.45516448e+00  4.37283101e-03 -2.53349904e-05  1.96586141e+02] +- [8.06801809e-03 8.49094958e-04 5.27207161e-04 1.96571020e+02]
 30/75 Final guess: [ 1.45516448e+00  4.37283101e-03 -2.53349904e-05  1.96586141e+02] +- [8.06801808e-03 8.49094957e-04 5.27207131e-04 1.96571021e+02]
 Querying 0.00 for pow1+pow0+my_sin(pow1)
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 0.004495175246063095 -> 1976559.7655141414
 
Fitting model=sum_(pow1+pow0)·my_sin(pow1) w/ 3 dof 
    +0/+0sum_       ~ -1/+1pow1      
 |                 ~ +0/+0pow0      
 x +0/+0my_sin     ~ -1/+1pow1      

 sum_(pow1+pow0)·my_sin(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 31/75 Scaling guess: [1.4542264380666667, 0.10906698285500001, 1.0]
 31/75 Better guess: [-0.36069401  1.08095724  1.45316753] +- [8.82285042e-05 1.81893038e-04 2.42591989e-04]
 31/75 Final guess: [-0.36069401  1.08095724  1.45316753] +- [8.82285042e-05 1.81893038e-04 2.42591989e-04]
 Querying 0.00 for sum_(pow1+pow0)·my_sin(pow1)
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 1.7410412368887715e-11 -> 4.183096444594275e-07
 Booting out contender sum_(pow1+pow0)·my_sin(pow1) with depth 3 in favour of pow0+my_exp(pow1) with depth 2
 
Fitting model=pow1+pow0+my_exp(pow1) w/ 4 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0pow0      
                ~ +0/+0my_exp     ~ -1/+1pow1      

 pow1+pow0+my_exp(pow1) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 32/75 Scaling guess: [0.9330944722748827, 0.009752497540745622, 0.0026948970230221405, -10.37552611730821]
 Couldn't find optimal parameters for better guess.
 Querying 6.90 for pow1+pow0+my_exp(pow1)
 
Fitting model=sum_(pow1+pow0)·my_exp(pow1) w/ 3 dof 
    +0/+0sum_       ~ -1/+1pow1      
 |                 ~ +0/+0pow0      
 x +0/+0my_exp     ~ -1/+1pow1      

 sum_(pow1+pow0)·my_exp(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 33/75 Scaling guess: [1.078437964074871, 0.02093495662129663, -0.20449424126165333]
 33/75 Better guess: [ 1.58578038e+00 -3.17447846e-04 -4.50291824e-01] +- [1.39754954e-03 5.79266482e-05 4.57350723e-03]
 33/75 Final guess: [ 1.58578038e+00 -3.17447846e-04 -4.50291824e-01] +- [1.39755728e-03 5.79269652e-05 4.57352585e-03]
 Querying 0.00 for sum_(pow1+pow0)·my_exp(pow1)
 Booting out contender sum_(pow1+pow0)·my_exp(pow1) with depth 3 in favour of pow0+my_exp(pow1) with depth 2
 
Fitting model=pow1·pow1·pow1+pow0 w/ 2 dof 
 +0/+0sum_       ~ -3/+1pow1                      x +0/+1pow1                      x +0/+1pow1      
                ~ +0/+0pow0      

 pow1·pow1·pow1+pow0 w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 34/75 Scaling guess: [124.30500877012312, -0.01676553149247555]
 34/75 Better guess: [40.82654987  0.08288421] +- [4.40421669 0.0093036 ]
 34/75 Final guess: [40.82654987  0.08288421] +- [4.40421669 0.0093036 ]
 Querying 1.51 for pow1·pow1·pow1+pow0
 
Fitting model=pow1·my_sin(pow1)+pow0 w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_sin     ~ -1/+1pow1      
                ~ +0/+0pow0      

 pow1·my_sin(pow1)+pow0 w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 35/75 Scaling guess: [1.4542264380666667, 1.0, 0.10906698285500001]
 35/75 Better guess: [ 1.24381855 10.95455203  0.03962533] +- [0.03405686 0.42682402 0.00359071]
 35/75 Final guess: [ 1.24381854 10.95455187  0.03962533] +- [0.03405681 0.42682491 0.00359071]
 Querying 0.09 for pow1·my_sin(pow1)+pow0
 
Fitting model=pow1·my_exp(pow1)+pow0 w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_exp     ~ -1/+1pow1      
                ~ +0/+0pow0      

 pow1·my_exp(pow1)+pow0 w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 36/75 Scaling guess: [1.0672202170165563, -0.048590168115428475, 0.014573939370815558]
 36/75 Better guess: [ 1.58592323e+00 -4.50270718e-01 -3.17446418e-04] +- [1.42318060e-03 4.56977729e-03 5.79257739e-05]
 36/75 Final guess: [ 1.58592323e+00 -4.50270718e-01 -3.17446418e-04] +- [1.42318060e-03 4.56977729e-03 5.79257738e-05]
 Querying 0.00 for pow1·my_exp(pow1)+pow0
 Booting out contender pow1·my_exp(pow1)+pow0 with width 3 in favour of pow0+my_exp(pow1) with width 2
 
Fitting model=pow1·my_sin(pow1)+pow1 w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_sin     ~ -1/+1pow1      
                ~ -1/+1pow1      

 pow1·my_sin(pow1)+pow1 w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 37/75 Scaling guess: [1.4542264380666667, 1.0, 1.4542264380666667]
 Couldn't find optimal parameters for better guess.
 Querying 0.81 for pow1·my_sin(pow1)+pow1
 
Fitting model=pow1·my_exp(pow1)+pow1 w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_exp     ~ -1/+1pow1      
                ~ -1/+1pow1      

 pow1·my_exp(pow1)+pow1 w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 38/75 Scaling guess: [0.46420425036290036, -0.08915058098171692, 0.43063250313931783]
 38/75 Better guess: [ 3.09836558e+02 -2.08132122e-03 -3.08259548e+02] +- [1.41495570e+04 9.50681545e-02 1.41495572e+04]
 38/75 Final guess: [ 3.09836558e+02 -2.08132122e-03 -3.08259548e+02] +- [1.43335766e+04 9.63045468e-02 1.43335768e+04]
 Querying 0.00 for pow1·my_exp(pow1)+pow1
 Adjustment: 1.1678561292332265e-05 -> 1518.6784771113394
 
Fitting model=sum_(pow1+my_sin(pow1))·pow1 w/ 3 dof 
    -1/+0sum_       ~ -1/+1pow1      
 |                 ~ +0/+0my_sin     ~ -1/+1pow1      
 x +0/+1pow1      

 sum_(pow1+my_sin(pow1))·pow1 w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 39/75 Scaling guess: [1.4542264380666667, 0.10906698285500001, 195.47687622336488]
 39/75 Better guess: [ 1.07143706e+01 -8.47590220e-02  1.97143405e+02] +- [ 0.80768937  0.15489095 13.50433379]
 39/75 Final guess: [ 1.07143734e+01 -8.47626922e-02  1.97146053e+02] +- [ 0.80769044  0.15488029 13.50686462]
 Querying 4.33 for sum_(pow1+my_sin(pow1))·pow1
 
Fitting model=sum_(pow1+my_exp(pow1))·pow1 w/ 3 dof 
    -1/+0sum_       ~ -1/+1pow1      
 |                 ~ +0/+0my_exp     ~ -1/+1pow1      
 x +0/+1pow1      

 sum_(pow1+my_exp(pow1))·pow1 w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 40/75 Scaling guess: [1.4542264380666667, 0.10906698285500001, 13.333333333333332]
 40/75 Better guess: [-6.44811347e-01  1.57700167e+00  6.18174553e-05] +- [1.07162659e+00 7.10229116e-04 6.79590050e-01]
 40/75 Final guess: [-6.44811378e-01  1.57700167e+00  6.19789227e-05] +- [1.07162383e+00 7.10227240e-04 6.79588425e-01]
 Querying 0.00 for sum_(pow1+my_exp(pow1))·pow1
 Adjustment: 1.1646524038248835e-05 -> 7439.278441168963
 
Fitting model=pow1·pow1+my_sin(pow1) w/ 3 dof 
 +0/+0sum_       ~ -2/+1pow1                      x +0/+1pow1      
                ~ +0/+0my_sin     ~ -1/+1pow1      

 pow1·pow1+my_sin(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 41/75 Scaling guess: [19.389685840888884, -0.10906698285500001, 195.47687622336488]
 41/75 Better guess: [ 1.06702978e+01 -6.98640580e-03  1.96907225e+02] +- [8.02211245e-01 1.62961375e-02 2.21084869e+01]
 41/75 Final guess: [ 1.06702978e+01 -6.98640580e-03  1.96907225e+02] +- [8.02211245e-01 1.62961370e-02 2.21084869e+01]
 Querying 4.37 for pow1·pow1+my_sin(pow1)
 
Fitting model=pow1+my_sin(pow1+pow0) w/ 4 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_sin     ~ -1/+1pow1      
                                  ~ +0/+0pow0      

 pow1+my_sin(pow1+pow0) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 xmul=1.0 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.0
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 42/75 Scaling guess: [1.4542264380666667, 0.10906698285500001, -195.47687622336488, 1.0]
 42/75 Better guess: [ 1.49266109e+00  4.72279187e-04 -1.97337523e+02  5.91162832e-02] +- [6.22498846e-03 9.40087161e-04 4.24213937e+01 4.41224371e+00]
 42/75 Final guess: [ 1.49266108e+00  4.72268745e-04 -1.97332125e+02  5.84598285e-02] +- [6.22498347e-03 9.40080428e-04 4.24240484e+01 4.41272530e+00]
 Querying 0.01 for pow1+my_sin(pow1+pow0)
 
Fitting model=pow1+my_sin(pow1·pow1) w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_sin     ~ -2/+1pow1                                        x +0/+1pow1      

 pow1+my_sin(pow1·pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=6515895.874112162 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.00018849555921538762
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 43/75 Scaling guess: [1.4542264380666667, 0.10906698285500001, 6515895.874112162]
 43/75 Better guess: [1.49105223e+00 1.38208989e-03 6.51598165e+06] +- [6.19466089e-03 8.48799363e-04 5.15538017e+01]
 43/75 Final guess: [1.49105223e+00 1.38208989e-03 6.51598165e+06] +- [6.19466089e-03 8.48799367e-04 5.15538017e+01]
 Querying 0.01 for pow1+my_sin(pow1·pow1)
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 0.011043647894369818 -> 5334942016642421.0
 
Fitting model=pow1+my_sin(my_exp(pow1)) w/ 4 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_sin     ~ +0/+0my_exp     ~ -1/+1pow1      

 pow1+my_sin(my_exp(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=14.657833845957331 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 83.792560994185
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 44/75 Scaling guess: [1.4542264380666667, -0.10906698285500001, 14.657833845957331, 13.333333333333332]
 44/75 Better guess: [ 1.49228560e+00 -1.96468685e-03  1.44963008e+01  1.33255216e+01] +- [0.00551028 0.00094928 0.36325093 0.17939484]
 44/75 Final guess: [ 1.49228560e+00 -1.96468685e-03  1.44963008e+01  1.33255216e+01] +- [0.00551034 0.00094928 0.36324844 0.17939341]
 Querying 0.01 for pow1+my_sin(my_exp(pow1))
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 0.010849580556831722 -> 25940.884660994394
 
Fitting model=pow1·pow1+my_exp(pow1) w/ 3 dof 
 +0/+0sum_       ~ -2/+1pow1                      x +0/+1pow1      
                ~ +0/+0my_exp     ~ -1/+1pow1      

 pow1·pow1+my_exp(pow1) w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 45/75 Scaling guess: [2.5152039252510585, 0.03465586844610725, -2.1184433997813503]
 45/75 Better guess: [3.99250302 0.05117929 6.44141694] +- [16.11338588  0.02149435 20.56572199]
 45/75 Final guess: [3.99262266 0.05117975 6.44120042] +- [16.11338574  0.02149435 20.5657218 ]
 Querying 0.44 for pow1·pow1+my_exp(pow1)
 
Fitting model=pow1+my_exp(pow1·pow1) w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_exp     ~ -2/+1pow1                                        x +0/+1pow1      

 pow1+my_exp(pow1·pow1) w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1·pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 46/75 Scaling guess: [1.3847049437097954, 0.012822981026295243, -177.7254494505597]
 46/75 Better guess: [ 1.46787301e+00  4.06615563e-03 -2.38072129e+01] +- [9.43216107e-02 2.25318779e-03 2.43549373e+02]
 46/75 Final guess: [ 1.46787146e+00  4.06615512e-03 -2.38018501e+01] +- [9.43216011e-02 2.25318754e-03 2.43549349e+02]
 Querying 0.00 for pow1+my_exp(pow1·pow1)
 Adjustment: 0.0036406512757475007 -> 2.2262346824169397
 
Fitting model=pow1+my_exp(my_sin(pow1)) w/ 4 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_exp     ~ +0/+0my_sin     ~ -1/+1pow1      

 pow1+my_exp(my_sin(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 47/75 Scaling guess: [1.4542264380666667, 0.10906698285500001, -1.0, 195.47687622336488]
 47/75 Better guess: [ 1.45516435e+00  4.37280696e-03 -5.78594924e-03  1.96592844e+02] +- [8.06781456e-03 8.49332663e-04 1.20747644e-01 1.97946349e+02]
 47/75 Final guess: [ 1.45516435e+00  4.37280696e-03 -5.78594924e-03  1.96592844e+02] +- [8.06784401e-03 8.49334261e-04 1.20746453e-01 1.97072513e+02]
 Querying 0.00 for pow1+my_exp(my_sin(pow1))
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 0.004495177142629077 -> 1976695.4131752837
 
Fitting model=pow1(pow1+pow0)·pow1 w/ 2 dof 
 +0/+0sum_       ~ -2/+1pow1       ~ +0/+1pow1      
                |                 ~ +1/+0pow0      
                x +0/+1pow1      

 pow1(pow1+pow0)·pow1 w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1(pow1+pow0)·pow1 w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 48/75 Scaling guess: [12.605894435686155, -0.07360368613849555]
 Couldn't find optimal parameters for better guess.
 Querying 21.05 for pow1(pow1+pow0)·pow1
 
Fitting model=pow1·pow1·pow1·pow1 w/ 1 dof 
 +0/+0sum_       ~ -4/+1pow1                      x +0/+1pow1                      x +0/+1pow1                      x +0/+1pow1      

 pow1·pow1·pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1·pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 49/75 Scaling guess: [817.2646691522665]
 49/75 Better guess: [416.70202161] +- [63.77528547]
 49/75 Final guess: [416.70201917] +- [63.77528547]
 Querying 14.48 for pow1·pow1·pow1·pow1
 
Fitting model=pow1·my_sin(pow1)·pow1 w/ 2 dof 
 +0/+0sum_       ~ -2/+1pow1                      x +0/+0my_sin     ~ -1/+1pow1      
                x +0/+1pow1      

 pow1·my_sin(pow1)·pow1 w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(pow1)·pow1 w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 50/75 Scaling guess: [19.389685840888884, 1.0]
 50/75 Better guess: [14.27124972 15.26757098] +- [1.25857375 0.63729717]
 50/75 Final guess: [14.2712466  15.26756889] +- [1.25856819 0.63730905]
 Querying 2.68 for pow1·my_sin(pow1)·pow1
 
Fitting model=pow1·my_exp(pow1)·pow1 w/ 2 dof 
 +0/+0sum_       ~ -2/+1pow1                      x +0/+0my_exp     ~ -1/+1pow1      
                x +0/+1pow1      

 pow1·my_exp(pow1)·pow1 w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_exp(pow1)·pow1 w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 51/75 Scaling guess: [16.661567958663223, -0.5229485494651624]
 51/75 Better guess: [41.33562162 -9.54772735] +- [3.12526619 0.56305526]
 51/75 Final guess: [41.33560217 -9.54772374] +- [3.12525059 0.56305587]
 Querying 0.26 for pow1·my_exp(pow1)·pow1
 
Fitting model=pow1·my_sin(pow1+pow0) w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_sin     ~ -1/+1pow1      
                                  ~ +0/+0pow0      

 pow1·my_sin(pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 52/75 Scaling guess: [1.4542264380666667, 1.0, 1.0]
 52/75 Better guess: [ 1.7027086  -0.80489657  1.17480691] +- [0.00065026 0.00139078 0.00088095]
 52/75 Final guess: [ 1.7027086  -0.80489656  1.1748069 ] +- [0.00065026 0.00139077 0.00088095]
 Querying 0.00 for pow1·my_sin(pow1+pow0)
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 1.808490463615102e-09 -> 2.839923547183174e-05
 New top 2 with red_chisqr=0.00: model=pow1·my_sin(pow1+pow0) w/ 3 dof  with pars=[1.703, -0.805, 1.175] ± [0.001, 0.001, 0.001]
 pow1·my_sin(pow1+pow0):
 +1.00E+00sum_       ~ +1.70E+00pow1                          x +1.00E+00my_sin     ~ -8.05E-01pow1      
                                          ~ +1.17E+00pow0      

 
Fitting model=pow1·my_sin(pow1·pow1) w/ 2 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_sin     ~ -2/+1pow1                                        x +0/+1pow1      

 pow1·my_sin(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 53/75 Scaling guess: [1.4542264380666667, 1.0]
 53/75 Better guess: [ 1.73963432 81.33563339] +- [0.13171161 6.07520458]
 53/75 Final guess: [ 1.7396345  81.33565852] +- [0.13171221 6.07512316]
 Querying 3.95 for pow1·my_sin(pow1·pow1)
 
Fitting model=pow1·my_sin(my_exp(pow1)) w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_sin     ~ +0/+0my_exp     ~ -1/+1pow1      

 pow1·my_sin(my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 54/75 Scaling guess: [1.4542264380666667, 1.0, 1.0]
 54/75 Better guess: [ 1.63616435  1.28614211 -0.85766118] +- [0.00096296 0.00185582 0.00225191]
 54/75 Final guess: [ 1.63616435  1.28614211 -0.85766118] +- [0.00096296 0.00185582 0.00225191]
 Querying 0.00 for pow1·my_sin(my_exp(pow1))
 LIAR! FREQUENCY EXTRAVAGENT
 Adjustment: 1.674488242344871e-08 -> 0.00031515011122236296
 New top 4 with red_chisqr=0.00: model=pow1·my_sin(my_exp(pow1)) w/ 3 dof  with pars=[1.636, 1.286, -0.858] ± [0.001, 0.002, 0.002]
 pow1·my_sin(my_exp(pow1)):
 +1.00E+00sum_       ~ +1.64E+00pow1                          x +1.00E+00my_sin     ~ +1.29E+00my_exp     ~ -8.58E-01pow1      

 
Fitting model=pow1·my_exp(pow1·pow1) w/ 2 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_exp     ~ -2/+1pow1                                        x +0/+1pow1      

 pow1·my_exp(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_exp(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 55/75 Scaling guess: [1.4542264380666667, 1.0]
 55/75 Better guess: [ 1.54260426 -1.80843024] +- [0.00190186 0.06223688]
 55/75 Final guess: [ 1.54260426 -1.80843026] +- [0.00190186 0.06223689]
 Querying 0.00 for pow1·my_exp(pow1·pow1)
 New top 3 with red_chisqr=0.00: model=pow1·my_exp(pow1·pow1) w/ 2 dof  with pars=[1.543, -1.808] ± [0.002, 0.062]
 pow1·my_exp(pow1·pow1):
 +1.00E+00sum_       ~ +1.54E+00pow1                          x +1.00E+00my_exp     ~ -1.81E+00pow1                                                x +1.00E+00pow1      

 
Fitting model=pow1·my_exp(my_sin(pow1)) w/ 3 dof 
 +0/+0sum_       ~ -1/+1pow1                      x +0/+0my_exp     ~ +0/+0my_sin     ~ -1/+1pow1      

 pow1·my_exp(my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_exp(my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 56/75 Scaling guess: [1.4542264380666667, 1.0, 1.0]
 Couldn't find optimal parameters for better guess.
 Querying 0.96 for pow1·my_exp(my_sin(pow1))
 
Fitting model=my_sin(pow1)+my_sin(pow1) w/ 4 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      
                ~ +0/+0my_sin     ~ -1/+1pow1      

 my_sin(pow1)+my_sin(pow1) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 my_sin(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 237.36477827122883
 xmul=237.36477827122883 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 57/75 Scaling guess: [0.10906698285500001, 237.36477827122883, 0.10906698285500001, 195.47687622336488]
 57/75 Better guess: [1.81379648e-02 2.32484342e+02 2.00773479e-02 1.98659595e+02] +- [ 0.06805192 35.33087829  0.06806495 31.82987275]
 57/75 Final guess: [1.81379648e-02 2.32484342e+02 2.00773479e-02 1.98659595e+02] +- [ 0.06805192 35.33087837  0.06806495 31.8298728 ]
 Querying 68.73 for my_sin(pow1)+my_sin(pow1)
 
Fitting model=my_sin(pow1)+my_exp(pow1) w/ 4 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      
                ~ +0/+0my_exp     ~ -1/+1pow1      

 my_sin(pow1)+my_exp(pow1) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 58/75 Scaling guess: [0.10906698285500001, 195.47687622336488, 0.10906698285500001, -13.333333333333332]
 58/75 Better guess: [4.77198842e-03 1.78805699e+02 5.19910533e-02 9.69982894e+00] +- [5.86579421e-03 1.15618531e+01 4.90541861e-03 6.94730818e-01]
 58/75 Final guess: [4.77196987e-03 1.78805031e+02 5.19910501e-02 9.69982921e+00] +- [5.86588648e-03 1.15611390e+01 4.90542205e-03 6.94730936e-01]
 Querying 0.56 for my_sin(pow1)+my_exp(pow1)
 
Fitting model=my_sin(pow0+my_exp(pow1)) w/ 4 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ +0/+0pow0      
                                  ~ +0/+0my_exp     ~ -1/+1pow1      

 my_sin(pow0+my_exp(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow0+my_exp(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=14.657833845957331 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 83.792560994185
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 xmul=1.0 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.0
 59/75 Scaling guess: [0.10906698285500001, -1.0, 14.657833845957331, -13.333333333333332]
 59/75 Better guess: [  0.16284762   1.58131752  28.75715703 -65.10764151] +- [ 0.02454293  1.064458   10.03048195 22.17092936]
 59/75 Final guess: [  0.16284822   1.5814649   28.76033087 -65.11353433] +- [ 0.02455135  1.06450432 10.03129632 22.17257623]
 Querying 12.13 for my_sin(pow0+my_exp(pow1))
 
Fitting model=my_sin(pow1·pow1+pow0) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -2/+1pow1                                        x +0/+1pow1      
                                  ~ +0/+0pow0      

 my_sin(pow1·pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1·pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 xmul=1.0 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.0
 pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=6515895.874112162 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.00018849555921538762
 60/75 Scaling guess: [0.10906698285500001, 6515895.874112162, 1.0]
 60/75 Better guess: [1.50846106e-01 6.51588233e+06 6.31850648e-01] +- [ 0.05854362 34.34839359  0.4817513 ]
 60/75 Final guess: [1.50846106e-01 6.51588233e+06 6.31850648e-01] +- [ 0.05854362 34.3483935   0.4817513 ]
 Querying 41.98 for my_sin(pow1·pow1+pow0)
 
Fitting model=my_sin(pow1)·my_sin(pow1) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      
                x +0/+0my_sin     ~ -1/+1pow1      

 my_sin(pow1)·my_sin(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1)·my_sin(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 61/75 Scaling guess: [0.10906698285500001, 195.47687622336488, 1.0]
 61/75 Better guess: [4.82701640e+00 1.97690506e+02 6.19901288e-02] +- [8.91251648e+05 1.46200040e+01 1.17347798e+04]
 61/75 Final guess: [4.91937834e+00 1.97690514e+02 6.08141009e-02] +- [9.24926076e+05 1.46114629e+01 1.18784810e+04]
 Querying 62.97 for my_sin(pow1)·my_sin(pow1)
 
Fitting model=my_sin(pow1+my_exp(pow1)) w/ 4 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      
                                  ~ +0/+0my_exp     ~ -1/+1pow1      

 my_sin(pow1+my_exp(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1+my_exp(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=14.657833845957331 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 83.792560994185
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 237.36477827122883
 xmul=237.36477827122883 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 62/75 Scaling guess: [-0.10906698285500001, 237.36477827122883, 14.657833845957331, 13.333333333333332]
 62/75 Better guess: [1.08953028e-01 4.55774576e+02 7.64559727e+00 1.42705707e+01] +- [ 0.06562339 58.42006631  1.81998234  0.74518087]
 62/75 Final guess: [1.08960767e-01 4.55779932e+02 7.64547466e+00 1.42705664e+01] +- [ 0.06562313 58.42649647  1.82015124  0.74523275]
 Querying 54.31 for my_sin(pow1+my_exp(pow1))
 
Fitting model=my_sin(pow1)·my_exp(pow1) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      
                x +0/+0my_exp     ~ -1/+1pow1      

 my_sin(pow1)·my_exp(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1)·my_exp(pow1) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 63/75 Scaling guess: [0.10906698285500001, 195.47687622336488, -1.0]
 Couldn't find optimal parameters for better guess.
 Querying 73.24 for my_sin(pow1)·my_exp(pow1)
 
Fitting model=my_sin(pow1·pow1·pow1) w/ 2 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -3/+1pow1                                        x +0/+1pow1                                        x +0/+1pow1      

 my_sin(pow1·pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1·pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 xmul=2370.3703703703695 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 4.3982297150257105e-09
 64/75 Scaling guess: [0.10906698285500001, 2370.3703703703695]
 64/75 Better guess: [6.34623838e-02 2.95354952e+03] +- [6.37705283e-02 4.54679352e+02]
 64/75 Final guess: [6.34601186e-02 2.95343977e+03] +- [6.37748381e-02 4.54510908e+02]
 Querying 55.64 for my_sin(pow1·pow1·pow1)
 
Fitting model=my_sin(pow1·my_exp(pow1)) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1                                        x +0/+0my_exp     ~ -1/+1pow1      

 my_sin(pow1·my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1·my_exp(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_exp(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47101202458882 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.2833738049379315
 65/75 Scaling guess: [0.10906698285500001, 195.47101202458882, -1.0]
 65/75 Better guess: [ 1.51660455e-01  5.45428474e+02 -7.37224413e+00] +- [ 0.04211599 21.72132227  0.45434657]
 65/75 Final guess: [ 1.51662273e-01  5.45430128e+02 -7.37222848e+00] +- [ 0.04211575 21.72212184  0.45434688]
 Querying 29.58 for my_sin(pow1·my_exp(pow1))
 
Fitting model=my_sin(my_exp(pow1·pow1)) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_sin     ~ +0/+0my_exp     ~ -2/+1pow1                                                          x +0/+1pow1      

 my_sin(my_exp(pow1·pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(my_exp(pow1·pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=36651.91263263623 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.03351032315531491
 66/75 Scaling guess: [-0.10906698285500001, 36651.91263263623, -177.77777777777771]
 66/75 Better guess: [-1.19794614e-01  3.66501307e+04 -1.77790432e+02] +- [0.05736628 1.24646649 0.01219123]
 66/75 Final guess: [-1.19794614e-01  3.66501307e+04 -1.77790432e+02] +- [0.05736705 1.24640978 0.01219069]
 Querying 47.61 for my_sin(my_exp(pow1·pow1))
 
Fitting model=my_exp(pow1)+my_exp(pow1) w/ 4 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ -1/+1pow1      
                ~ +0/+0my_exp     ~ -1/+1pow1      

 my_exp(pow1)+my_exp(pow1) w/ 4 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 67/75 Scaling guess: [0.10906698285500001, -13.333333333333332, 0.10906698285500001, -13.333333333333332]
 67/75 Better guess: [0.02623018 9.66846045 0.02583868 9.66845468] +- [ 102013.33235365 6063575.86586454  102013.33076866 6155461.79907797]
 67/75 Final guess: [0.02623018 9.66846045 0.02583868 9.66845468] +- [  71966.90226932 5888156.29108252   71966.90122703 5977381.37160995]
 Querying 0.59 for my_exp(pow1)+my_exp(pow1)
 
Fitting model=my_exp(pow1+my_sin(pow1)) w/ 4 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ -1/+1pow1      
                                  ~ +0/+0my_sin     ~ -1/+1pow1      

 my_exp(pow1+my_sin(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1+my_sin(pow1)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 68/75 Scaling guess: [0.10906698285500001, -13.333333333333332, 1.0, 195.47687622336488]
 68/75 Better guess: [5.13207256e-02 9.81791400e+00 3.40798073e-02 1.42190479e+02] +- [4.93529400e-03 7.16741295e-01 3.75976368e-02 8.25223990e+00]
 68/75 Final guess: [5.13207413e-02 9.81791028e+00 3.40793048e-02 1.42189469e+02] +- [4.93528984e-03 7.16740369e-01 3.75991556e-02 8.25138254e+00]
 Querying 0.55 for my_exp(pow1+my_sin(pow1))
 
Fitting model=my_exp(pow1·pow1·pow1) w/ 2 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ -3/+1pow1                                        x +0/+1pow1                                        x +0/+1pow1      

 my_exp(pow1·pow1·pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1·pow1·pow1) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1·pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 69/75 Scaling guess: [0.10906698285500001, -2370.3703703703695]
 69/75 Better guess: [9.85949459e-02 2.17635066e+02] +- [1.03285156e-02 3.26030668e+01]
 69/75 Final guess: [9.85948635e-02 2.17635376e+02] +- [1.03285380e-02 3.26030429e+01]
 Querying 2.58 for my_exp(pow1·pow1·pow1)
 
Fitting model=my_exp(pow1·my_sin(pow1)) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ -1/+1pow1                                        x +0/+0my_sin     ~ -1/+1pow1      

 my_exp(pow1·my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(pow1·my_sin(pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·my_sin(pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 70/75 Scaling guess: [0.10906698285500001, 13.333333333333332, 1.0]
 70/75 Better guess: [ 0.05671522  9.75813153 12.37760643] +- [0.00504139 0.80904805 0.46337459]
 70/75 Final guess: [ 0.05671525  9.75812562 12.37760415] +- [0.00504138 0.80905144 0.46337038]
 Querying 0.34 for my_exp(pow1·my_sin(pow1))
 
Fitting model=my_exp(my_sin(pow1+pow0)) w/ 4 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ +0/+0my_sin     ~ -1/+1pow1      
                                                    ~ +0/+0pow0      

 my_exp(my_sin(pow1+pow0)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(my_sin(pow1+pow0)) w/ 4 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1+pow0) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 xmul=1.0 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.0
 pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=195.47687622336488 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 6.283185307179586
 71/75 Scaling guess: [0.10906698285500001, 1.0, 195.47687622336488, 1.0]
 71/75 Better guess: [ 1.42162428e-01  1.11932797e-01  2.36056189e+02 -5.01504138e-01] +- [1.92161585e-02 1.93260666e-01 3.74950720e+01 3.88267730e+00]
 71/75 Final guess: [ 1.42162428e-01  1.11932797e-01  2.36056189e+02 -5.01504138e-01] +- [1.92161611e-02 1.93254200e-01 3.75000371e+01 3.88300735e+00]
 Querying 12.26 for my_exp(my_sin(pow1+pow0))
 
Fitting model=my_exp(my_sin(pow1·pow1)) w/ 3 dof 
 +0/+0sum_       ~ +0/+0my_exp     ~ +0/+0my_sin     ~ -2/+1pow1                                                          x +0/+1pow1      

 my_exp(my_sin(pow1·pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_exp(my_sin(pow1·pow1)) w/ 3 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 my_sin(pow1·pow1) w/ 2 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1·pow1 w/ 1 dof  [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Using sine frequency 195.47687622336488
 xmul=6515895.874112162 [31.111111111111107, 37.77777777777778, 42.22222222222222, 2.222222222222222] 0.00018849555921538762
 72/75 Scaling guess: [0.10906698285500001, 1.0, 6515895.874112162]
 72/75 Better guess: [1.34153646e-01 1.64595770e-01 6.51590190e+06] +- [2.25222919e-02 2.44772010e-01 7.82119916e+01]
 72/75 Final guess: [1.34153646e-01 1.64595770e-01 6.51590190e+06] +- [2.25222919e-02 2.44772011e-01 7.82119916e+01]
 Querying 11.10 for my_exp(my_sin(pow1·pow1))
 
Fitting model=my_exp(dim0_pow2(pow1_shift)) w/ 3 dof 
 +0/+0my_exp     ~ +1/+1dim0_pow2  ~ +1/+1pow1_shift

 my_exp(dim0_pow2(pow1_shift)) w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 dim0_pow2(pow1_shift) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1_shift w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 73/75 Scaling guess: [0.10906698285500001, 0.07500000000000001, 0.07500000000000001]
 73/75 Better guess: [0.25256579 0.09252515 0.19451921] +- [0.00834918 0.00455124 0.00807846]
 73/75 Final guess: [0.25256573 0.0925251  0.19451913] +- [0.00834953 0.00455136 0.00807874]
 Querying 0.05 for Gaussian
 
Fitting model=n_exp_dim2(pow1_shift) w/ 2 dof 
 +1/+1n_exp_dim2 ~ +1/+1pow1_shift

 n_exp_dim2(pow1_shift) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1_shift w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 74/75 Scaling guess: [0.07500000000000001, -0.07500000000000001]
 74/75 Better guess: [0.22590209 0.60940234] +- [0.01058164 0.01785312]
 74/75 Final guess: [0.22590194 0.6094021 ] +- [0.01058178 0.01785332]
 Querying 0.36 for Normal
 
Fitting model=pow_neg1(pow0+exp_dim1(pow1_shift))+pow0 w/ 4 dof 
 +0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0pow_neg1   ~ +0/+0pow0      
                                  ~ +1/+1exp_dim1   ~ +1/+1pow1_shift

 pow_neg1(pow0+exp_dim1(pow1_shift))+pow0 w/ 4 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow_neg1(pow0+exp_dim1(pow1_shift)) w/ 3 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 exp_dim1(pow1_shift) w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1_shift w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 75/75 Scaling guess: [0.10906698285500001, 0.10906698285500001, 0.07500000000000001, 0.07500000000000001]
 75/75 Better guess: [-1.65112944  2.63448828  0.39255868 -0.20344787] +- [0.00721239 0.00879389 0.00101101 0.00160616]
 75/75 Final guess: [-1.65113017  2.63448917  0.39255879 -0.20344803] +- [0.00721221 0.00879365 0.00101098 0.00160612]
 Querying 0.00 for Sigmoid
 Booting out contender Sigmoid with dof 4 in favour of pow0+my_exp(pow1) with dof 3
 
Best models are ['pow0+my_exp(pow1)', 'pow1·my_exp(pow1)', 'pow1·my_sin(pow1+pow0)', 'pow1·my_exp(pow1·pow1)', 'sum_(pow1·pow1+pow0)·pow1'] with associated reduced chi-squareds [6.826817349101032e-06, 1.783581065100975e-05, 2.839923547183174e-05, 0.0002073968708692006, 0.00022850051247704599]
 
Best model is pow0+my_exp(pow1) w/ 3 dof  
 with args [1.7242701110539889, -1.724613507585498, -0.9203148090471998] += [0.017816486227810648, 0.017763281977012546, 0.010368823267615516] 
 and reduced chi-sqr 6.826817349101032e-06
 pow0+my_exp(pow1) w/ 3 dof isnt submodel of None -1
 pow0+my_exp(pow1):
 +1.00E+00sum_       ~ +1.72E+00pow0      
                    ~ -1.72E+00my_exp     ~ -9.20E-01pow1      

 Fitting to linear model
 
Fitting model=pow1+pow0 w/ 2 dof 
 +0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0pow0      

 pow1+pow0 w/ 2 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow0 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 pow1 w/ 1 dof  [37.77777777777778, 42.22222222222222, 2.222222222222222] [6.666666666666666, 13.333333333333332, 17.77777777777778, 24.444444444444443]
 Scaling guess: [1.054107661483652, 0.01613524006039609]
 Better guess: [1.45509398 0.00437952] +- [0.00734388 0.00077547]
 Final guess: [1.45509398 0.00437952] +- [0.00734388 0.00077547]
