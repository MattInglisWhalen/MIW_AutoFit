In C:\Users\Matt\Documents\GitHub\MIW_AutoFit\autofit
GUI Width >1440<
GUI Height >810<
GUI X >0<
GUI Y >0<
Fit-type >Procedural<
Procedural depth >2<
Excel X-Range >A3:A18<
Excel Y-Range >B3:B18<
Excel SigmaX-Range ><
Excel SigmaY-Range ><
Data location >C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data<
Background Colour >Default<
Data and Axis Colour >Default<
Fit Line Colour >Default<
Console Colour >Default<
Printout Colour >Default<
Procedural cos(x) >0<
Procedural sin(x) >1<
Procedural exp(x) >1<
Procedural log(x) >0<
Procedural 1/x >0<
Procedural custom >0<
Custom function names ><
Custom function forms ><
Manual function name >ManualEntryFunc<
Manual function form >sin(pow1)<
OS Scaling >1.00<
Image R >1.000<
Refit on Click: >1<
Criterion: >rchisqr<
Fine width 1440 2240.0
Fine height 810 1260.0
Created frame .!frame2.!frame.!label
Package directory is C:\Users\Matt\Documents\GitHub\MIW_AutoFit\autofit with MEIPASS=False
Data directory is C:\Users\Matt\Documents\GitHub\MIW_AutoFit\autofit/data
In create custom remove menu
File is 3x50
Loaded 1 files.
If refit on button, this should make refit_button appear
['C:/Users/Matt/Documents/GitHub/MIW_AutoFit/autofit/data/expsin.csv']
New optimizer created
True, so regenerating composite list with 3 and ['pow0', 'pow1', 'my_sin', 'my_exp']
0 build_comp_list new_len=
48
1 build_comp_list new_len=
846
0/902
500/902
After trimming list: (len=23)
pow0 w/ 1 dof 
pow1 w/ 1 dof 
pow1+pow0 w/ 2 dof 
pow1·pow1 w/ 1 dof 
my_sin(pow1) w/ 2 dof 
my_exp(pow1) w/ 2 dof 
pow0+my_sin(pow1) w/ 3 dof 
pow0+my_exp(pow1) w/ 3 dof 
sum_(pow1+pow0)·pow1 w/ 2 dof 
pow1·pow1+pow0 w/ 2 dof 
pow1+my_sin(pow1) w/ 3 dof 
pow1+my_exp(pow1) w/ 3 dof 
pow1·pow1·pow1 w/ 1 dof 
pow1·my_sin(pow1) w/ 2 dof 
pow1·my_exp(pow1) w/ 2 dof 
my_sin(pow1+pow0) w/ 3 dof 
my_sin(pow1·pow1) w/ 2 dof 
my_sin(my_exp(pow1)) w/ 3 dof 
my_exp(pow1·pow1) w/ 2 dof 
my_exp(my_sin(pow1)) w/ 3 dof 
my_exp(dim0_pow2(pow1_shift)) w/ 3 dof 
n_exp_dim2(pow1_shift) w/ 2 dof 
pow_neg1(pow0+exp_dim1(pow1_shift))+pow0 w/ 4 dof 
|----------------


Fitting model=pow0 w/ 1 dof 
+0/+0sum_       ~ +0/+0pow0      

pow0 w/ 1 dof 
None
None
pow0 w/ 1 dof 
None
None
1/23 Scaling guess: [8.803552456438556]
1/23 Better guess: [14.80035505] +- [0.67456035]
1/23 Final guess: [14.80035505] +- [0.14142136]
Querying 22.75 for pow0
New top 0 with red_chisqr=22.75: model=pow0 w/ 1 dof  with pars=[14.800] ± [0.141]
pow0:
+1.00E+00sum_       ~ +1.48E+01pow0      


Fitting model=pow1 w/ 1 dof 
+0/+0sum_       ~ -1/+1pow1      

pow1 w/ 1 dof 
None
None
pow1 w/ 1 dof 
None
None
2/23 Scaling guess: [0.3593286716913696]
2/23 Better guess: [0.37813152] +- [0.05309656]
2/23 Final guess: [0.37813152] +- [0.00482664]
Querying 121.02 for pow1
New top 1 with red_chisqr=121.02: model=pow1 w/ 1 dof  with pars=[0.378] ± [0.005]
pow1:
+1.00E+00sum_       ~ +3.78E-01pow1      


Fitting model=pow1+pow0 w/ 2 dof 
+0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0pow0      

pow1+pow0 w/ 2 dof 
None
None
pow0 w/ 1 dof 
None
None
pow1 w/ 1 dof 
None
None
3/23 Scaling guess: [0.16496853780978332, 4.761136776272443]
3/23 Better guess: [-0.25346049 21.26359759] +- [0.02986918 0.87517202]
3/23 Final guess: [-0.25346049 21.26359759] +- [0.00979992 0.2871393 ]
Querying 9.29 for Linear
New top 0 with red_chisqr=9.29: model=pow1+pow0 w/ 2 dof  with pars=[-0.253, 21.264] ± [0.010, 0.287]
Linear:
+1.00E+00sum_       ~ -2.53E-01pow1      
                    ~ +2.13E+01pow0      


Fitting model=pow1·pow1 w/ 1 dof 
+0/+0sum_       ~ -2/+1pow1                      x +0/+1pow1      

pow1·pow1 w/ 1 dof 
None
None
pow1·pow1 w/ 1 dof 
None
None
4/23 Scaling guess: [0.007926751065953728]
4/23 Better guess: [0.00734933] +- [0.00162728]
4/23 Final guess: [0.00734933] +- [0.0001234]
Querying 173.89 for pow1·pow1
New top 3 with red_chisqr=173.89: model=pow1·pow1 w/ 1 dof  with pars=[0.007] ± [0.000]
pow1·pow1:
+1.00E+00sum_       ~ +7.35E-03pow1                          x +1.00E+00pow1      


Fitting model=my_sin(pow1) w/ 2 dof 
+0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      

my_sin(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_sin(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
Using sine frequency 0.1282282715750936
xmul=0.1282282715750936 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 6.283185307179586
5/23 Scaling guess: [8.803552456438556, 0.1282282715750936]
5/23 Better guess: [20.37012806  0.06379587] +- [1.28796399 0.00194421]
5/23 Final guess: [20.37010557  0.06379573] +- [0.20748204 0.00031321]
Querying 38.53 for my_sin(pow1)
New top 2 with red_chisqr=38.53: model=my_sin(pow1) w/ 2 dof  with pars=[20.370, 0.064] ± [0.207, 0.000]
my_sin(pow1):
+1.00E+00sum_       ~ +2.04E+01my_sin     ~ +6.38E-02pow1      


Fitting model=my_exp(pow1) w/ 2 dof 
+0/+0sum_       ~ +0/+0my_exp     ~ -1/+1pow1      

my_exp(pow1) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_exp(pow1) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
6/23 Scaling guess: [8.803552456438556, -0.04081632653061224]
6/23 Better guess: [ 2.12735776e+01 -1.50054563e-02] +- [1.14033802 0.00225324]
6/23 Final guess: [ 2.12736814e+01 -1.50057067e-02] +- [0.34471884 0.00068115]
Querying 10.94 for my_exp(pow1)
New top 1 with red_chisqr=10.94: model=my_exp(pow1) w/ 2 dof  with pars=[21.274, -0.015] ± [0.345, 0.001]
my_exp(pow1):
+1.00E+00sum_       ~ +2.13E+01my_exp     ~ -1.50E-02pow1      


Fitting model=pow0+my_sin(pow1) w/ 3 dof 
+0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_sin     ~ -1/+1pow1      

pow0+my_sin(pow1) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_sin(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
Using sine frequency 0.1282282715750936
xmul=0.1282282715750936 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 6.283185307179586
pow0 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
7/23 Scaling guess: [8.803552456438556, 8.803552456438556, 0.1282282715750936]
7/23 Better guess: [14.23182234  6.20045862  0.10417279] +- [0.21700277 0.25120012 0.00197236]
7/23 Final guess: [14.2318242   6.200458    0.10417283] +- [0.1684468  0.19499343 0.00153103]
Querying 1.66 for pow0+my_sin(pow1)
New top 0 with red_chisqr=1.66: model=pow0+my_sin(pow1) w/ 3 dof  with pars=[14.232, 6.200, 0.104] ± [0.168, 0.195, 0.002]
pow0+my_sin(pow1):
+1.00E+00sum_       ~ +1.42E+01pow0      
                    ~ +6.20E+00my_sin     ~ +1.04E-01pow1      


Fitting model=pow0+my_exp(pow1) w/ 3 dof 
+0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0my_exp     ~ -1/+1pow1      

pow0+my_exp(pow1) w/ 3 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_exp(pow1) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow0 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
8/23 Scaling guess: [8.803552456438556, 8.803552456438556, -0.04081632653061224]
Negative variance encountered
Couldn't find optimal parameters for better guess.
Querying 20.82 for pow0+my_exp(pow1)
Adjustment: 20.821466838429824 -> 16067556475.558228

Fitting model=sum_(pow1+pow0)·pow1 w/ 2 dof 
   -1/+0sum_       ~ -1/+1pow1      
 |                 ~ +0/+0pow0      
 x +0/+1pow1      

sum_(pow1+pow0)·pow1 w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow0 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
9/23 Scaling guess: [0.014050347532139205, -0.3115777438876681]
9/23 Better guess: [-0.0322012   1.59763228] +- [0.00291767 0.11411772]
9/23 Final guess: [-0.0322012   1.59763228] +- [0.00049374 0.01931129]
Querying 34.92 for sum_(pow1+pow0)·pow1
New top 4 with red_chisqr=34.92: model=sum_(pow1+pow0)·pow1 w/ 2 dof  with pars=[-0.032, 1.598] ± [0.000, 0.019]
sum_(pow1+pow0)·pow1:
   +1.00E+00sum_       ~ -3.22E-02pow1      
 |                     ~ +1.60E+00pow0      
 x +1.00E+00pow1      


Fitting model=pow1·pow1+pow0 w/ 2 dof 
+0/+0sum_       ~ -2/+1pow1                      x +0/+1pow1      
                ~ +0/+0pow0      

pow1·pow1+pow0 w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow0 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1·pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
10/23 Scaling guess: [0.0048318377637887365, 2.3247312430510063]
10/23 Better guess: [-5.29920283e-03  1.93497207e+01] +- [4.70080851e-04 5.38716209e-01]
10/23 Final guess: [-5.29920283e-03  1.93497207e+01] +- [1.86288706e-04 2.13488263e-01]
Querying 6.37 for pow1·pow1+pow0
New top 1 with red_chisqr=6.37: model=pow1·pow1+pow0 w/ 2 dof  with pars=[-0.005, 19.350] ± [0.000, 0.213]
pow1·pow1+pow0:
+1.00E+00sum_       ~ -5.30E-03pow1                          x +1.00E+00pow1      
                    ~ +1.93E+01pow0      


Fitting model=pow1+my_sin(pow1) w/ 3 dof 
+0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_sin     ~ -1/+1pow1      

pow1+my_sin(pow1) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_sin(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
Using sine frequency 0.1282282715750936
xmul=0.1282282715750936 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 6.283185307179586
pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
11/23 Scaling guess: [0.3593286716913696, 8.803552456438556, 0.1282282715750936]
11/23 Better guess: [ 0.49835411 14.59242908  0.10579875] +- [0.02282586 0.78326815 0.00246568]
11/23 Final guess: [ 0.49835396 14.5924276   0.10579871] +- [0.00594276 0.20392341 0.00064195]
Querying 14.75 for pow1+my_sin(pow1)
New top 4 with red_chisqr=14.75: model=pow1+my_sin(pow1) w/ 3 dof  with pars=[0.498, 14.592, 0.106] ± [0.006, 0.204, 0.001]
pow1+my_sin(pow1):
+1.00E+00sum_       ~ +4.98E-01pow1      
                    ~ +1.46E+01my_sin     ~ +1.06E-01pow1      


Fitting model=pow1+my_exp(pow1) w/ 3 dof 
+0/+0sum_       ~ -1/+1pow1      
                ~ +0/+0my_exp     ~ -1/+1pow1      

pow1+my_exp(pow1) w/ 3 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_exp(pow1) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
12/23 Scaling guess: [0.3593286716913696, 8.803552456438556, -0.04081632653061224]
12/23 Better guess: [-2.53429213e-01  2.12636044e+01 -1.48359475e-06] +- [115.0239126    0.88956428   5.40919094]
12/23 Final guess: [-2.53482541e-01  2.12635526e+01  1.12095865e-06] +- [37.85250626  0.29062012  1.78020693]
Querying 9.49 for pow1+my_exp(pow1)
Adjustment: 9.487350422124939 -> 96817059.19907679

Fitting model=pow1·pow1·pow1 w/ 1 dof 
+0/+0sum_       ~ -3/+1pow1                      x +0/+1pow1                      x +0/+1pow1      

pow1·pow1·pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1·pow1·pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
13/23 Scaling guess: [0.0002187155698857744]
13/23 Better guess: [0.00014015] +- [4.07267619e-05]
13/23 Final guess: [0.00014015] +- [2.89186636e-06]
Querying 198.34 for pow1·pow1·pow1

Fitting model=pow1·my_sin(pow1) w/ 2 dof 
+0/+0sum_       ~ -1/+1pow1                      x +0/+0my_sin     ~ -1/+1pow1      

pow1·my_sin(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1·my_sin(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
14/23 Scaling guess: [-0.3593286716913696, 1.0]
14/23 Better guess: [-0.01994069  0.9907483 ] +- [0.1074607  0.14059373]
14/23 Final guess: [-0.01994175  0.99078185] +- [0.00677939 0.00887182]
Querying 251.22 for pow1·my_sin(pow1)

Fitting model=pow1·my_exp(pow1) w/ 2 dof 
+0/+0sum_       ~ -1/+1pow1                      x +0/+0my_exp     ~ -1/+1pow1      

pow1·my_exp(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1·my_exp(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
15/23 Scaling guess: [0.3593286716913696, -1.0]
15/23 Better guess: [ 4.35051143 -0.07325903] +- [0.21327499 0.00221074]
15/23 Final guess: [ 4.35051306 -0.07325905] +- [0.08590396 0.00089045]
Querying 6.16 for pow1·my_exp(pow1)
New top 1 with red_chisqr=6.16: model=pow1·my_exp(pow1) w/ 2 dof  with pars=[4.351, -0.073] ± [0.086, 0.001]
pow1·my_exp(pow1):
+1.00E+00sum_       ~ +4.35E+00pow1                          x +1.00E+00my_exp     ~ -7.33E-02pow1      


Fitting model=my_sin(pow1+pow0) w/ 3 dof 
+0/+0sum_       ~ +0/+0my_sin     ~ -1/+1pow1      
                                  ~ +0/+0pow0      

my_sin(pow1+pow0) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_sin(pow1+pow0) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow0 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
xmul=1.0 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 0.0
pow1 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
Using sine frequency 0.1282282715750936
xmul=0.1282282715750936 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 6.283185307179586
16/23 Scaling guess: [-8.803552456438556, -0.1282282715750936, 1.0]
16/23 Better guess: [-18.74340684  -0.03711638  -1.04115385] +- [0.43283225 0.00260078 0.09988227]
16/23 Final guess: [-18.74340721  -0.03711636  -1.04115451] +- [0.19525787 0.00117323 0.04505749]
Querying 4.91 for my_sin(pow1+pow0)
New top 1 with red_chisqr=4.91: model=my_sin(pow1+pow0) w/ 3 dof  with pars=[-18.743, -0.037, -1.041] ± [0.195, 0.001, 0.045]
my_sin(pow1+pow0):
+1.00E+00sum_       ~ -1.87E+01my_sin     ~ -3.71E-02pow1      
                                          ~ -1.04E+00pow0      


Fitting model=my_sin(pow1·pow1) w/ 2 dof 
+0/+0sum_       ~ +0/+0my_sin     ~ -2/+1pow1                                        x +0/+1pow1      

my_sin(pow1·pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_sin(pow1·pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1·pow1 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
Using sine frequency 0.1282282715750936
xmul=4274.275719169786 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 0.00018849555921538762
17/23 Scaling guess: [8.803552456438556, 4274.275719169786]
17/23 Better guess: [3.34401634e+00 4.27427633e+03] +- [3.18646756e+00 7.72741593e-04]
17/23 Final guess: [3.34506779e+00 4.27427633e+03] +- [2.03399633e-01 4.88108640e-05]
Querying 245.73 for my_sin(pow1·pow1)

Fitting model=my_sin(my_exp(pow1)) w/ 3 dof 
+0/+0sum_       ~ +0/+0my_sin     ~ +0/+0my_exp     ~ -1/+1pow1      

my_sin(my_exp(pow1)) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_sin(my_exp(pow1)) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_exp(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
Using sine frequency 0.1282282715750936
xmul=3.141590730115549 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 0.25645670016858896
18/23 Scaling guess: [8.803552456438556, 3.141590730115549, -0.04081632653061224]
18/23 Better guess: [20.67350677  2.63335838 -0.04088773] +- [0.39859007 0.06040019 0.00146028]
18/23 Final guess: [20.67350834  2.63335859 -0.04088774] +- [0.25981054 0.03937046 0.00095185]
Querying 2.35 for my_sin(my_exp(pow1))
New top 1 with red_chisqr=2.35: model=my_sin(my_exp(pow1)) w/ 3 dof  with pars=[20.674, 2.633, -0.041] ± [0.260, 0.039, 0.001]
my_sin(my_exp(pow1)):
+1.00E+00sum_       ~ +2.07E+01my_sin     ~ +2.63E+00my_exp     ~ -4.09E-02pow1      


Fitting model=my_exp(pow1·pow1) w/ 2 dof 
+0/+0sum_       ~ +0/+0my_exp     ~ -2/+1pow1                                        x +0/+1pow1      

my_exp(pow1·pow1) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_exp(pow1·pow1) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1·pow1 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
19/23 Scaling guess: [8.803552456438556, -0.001665972511453561]
19/23 Better guess: [ 1.97827704e+01 -3.81916363e-04] +- [6.26451767e-01 4.09462430e-05]
19/23 Final guess: [ 1.97827688e+01 -3.81916198e-04] +- [2.42258791e-01 1.58345818e-05]
Querying 6.69 for my_exp(pow1·pow1)

Fitting model=my_exp(my_sin(pow1)) w/ 3 dof 
+0/+0sum_       ~ +0/+0my_exp     ~ +0/+0my_sin     ~ -1/+1pow1      

my_exp(my_sin(pow1)) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_exp(my_sin(pow1)) w/ 3 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
my_sin(pow1) w/ 2 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1 w/ 1 dof 
[0.02040816326530612, 0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
Using sine frequency 0.1282282715750936
xmul=0.1282282715750936 [0.02040816326530612, 0.11564625850340136, 0.2993197278911564] 6.283185307179586
20/23 Scaling guess: [8.803552456438556, 1.0, 0.1282282715750936]
20/23 Better guess: [13.20985692  0.46764371  0.10068145] +- [0.24036379 0.02076417 0.00189549]
20/23 Final guess: [13.20985502  0.46764392  0.10068144] +- [0.21345883 0.01844007 0.00168326]
Querying 1.27 for my_exp(my_sin(pow1))
New top 0 with red_chisqr=1.27: model=my_exp(my_sin(pow1)) w/ 3 dof  with pars=[13.210, 0.468, 0.101] ± [0.213, 0.018, 0.002]
my_exp(my_sin(pow1)):
+1.00E+00sum_       ~ +1.32E+01my_exp     ~ +4.68E-01my_sin     ~ +1.01E-01pow1      


Fitting model=my_exp(dim0_pow2(pow1_shift)) w/ 3 dof 
+0/+0my_exp     ~ +1/+1dim0_pow2  ~ +1/+1pow1_shift

my_exp(dim0_pow2(pow1_shift)) w/ 3 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
dim0_pow2(pow1_shift) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1_shift w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
21/23 Scaling guess: [8.803552456438556, 24.5, 24.5]
21/23 Better guess: [19.62052638 20.85923513 15.51432954] +- [0.40688212 1.05668769 0.8977937 ]
21/23 Final guess: [19.62053757 20.85919497 15.51433522] +- [0.22303825 0.57921465 0.49211819]
Querying 3.33 for Gaussian
New top 3 with red_chisqr=3.33: model=my_exp(dim0_pow2(pow1_shift)) w/ 3 dof  with pars=[19.621, 20.859, 15.514] ± [0.223, 0.579, 0.492]
Gaussian:
+1.96E+01my_exp     ~ +2.09E+01dim0_pow2  ~ +1.55E+01pow1_shift


Fitting model=n_exp_dim2(pow1_shift) w/ 2 dof 
+1/+1n_exp_dim2 ~ +1/+1pow1_shift

n_exp_dim2(pow1_shift) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1_shift w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
22/23 Scaling guess: [24.5, 24.5]
22/23 Better guess: [1.50282408e-02 1.80056412e+01] +- [inf inf]
22/23 Final guess: [1.50282408e-02 1.80056412e+01] +- [inf inf]
Querying 238.65 for Normal

Fitting model=pow_neg1(pow0+exp_dim1(pow1_shift))+pow0 w/ 4 dof 
+0/+0sum_       ~ +0/+0pow0      
                ~ +0/+0pow_neg1   ~ +0/+0pow0      
                                  ~ +1/+1exp_dim1   ~ +1/+1pow1_shift

pow_neg1(pow0+exp_dim1(pow1_shift))+pow0 w/ 4 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow_neg1(pow0+exp_dim1(pow1_shift)) w/ 3 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
exp_dim1(pow1_shift) w/ 2 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow1_shift w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow0 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
pow0 w/ 1 dof 
[0.11564625850340136, 0.2993197278911564]
[0.05442176870748299, 0.09523809523809523, 0.05442176870748299, 0.15646258503401358, 0.21088435374149658, 0.37414965986394555, 0.4897959183673469]
23/23 Scaling guess: [6.876431090842259, 6.167126070517615, -0.08653332129829096, -0.5435031925959066]
23/23 Better guess: [ 6.88904117e+02 -6.74103762e+02 -8.65333213e-02 -5.43503193e-01] +- [inf inf inf inf]
23/23 Final guess: [ 6.88904117e+02 -6.74103762e+02 -8.65333213e-02 -5.43503193e-01] +- [inf inf inf inf]
Querying 24.24 for Sigmoid

Best models are ['my_exp(my_sin(pow1))', 'pow0+my_sin(pow1)', 'my_sin(my_exp(pow1))', 'Gaussian', 'my_sin(pow1+pow0)'] with associated reduced chi-squareds [1.268012610857532, 1.6595721807569488, 2.3536312687328365, 3.327995880392509, 4.913865357716872]

Best model is my_exp(my_sin(pow1)) w/ 3 dof  
 with args [13.209855015413641, 0.4676439175917328, 0.10068143863107334] += [0.21345883048581546, 0.018440073556771068, 0.0016832592974854472] 
 and reduced chi-sqr 1.268012610857532
my_exp(my_sin(pow1)) w/ 3 dof isnt submodel of None -1
my_exp(my_sin(pow1)):
+1.00E+00sum_       ~ +1.32E+01my_exp     ~ +4.68E-01my_sin     ~ +1.01E-01pow1      

